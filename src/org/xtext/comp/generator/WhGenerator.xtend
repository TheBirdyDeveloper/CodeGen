/*
 * generated by Xtext 2.10.0
 */
package org.xtext.comp.generator

import java.util.HashMap
import java.util.List
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WhGenerator extends AbstractGenerator {
	private GenTable genTable;
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		//N'est pas utilisÃ©e
	}
	
	def void doGenerate(GenTable genTable, IFileSystemAccess2 fsa, String outputName) {
		this.genTable = genTable;
    	fsa.generateFile(outputName, genTable.listCode3Adr.genCode3Adr)
	}
	
	def String genCode3Adr(HashMap<String, List<Instr>> map)
		'''
		«FOR key : map.keySet()»
			function «key»()
			«FOR instr : map.get(key)»
				«IF instr instanceof InstrNop»
				«ENDIF»
			«ENDFOR»
			end
		«ENDFOR»
		'''
}
